group 'net.d4rkfly3r'
version '1.0-SNAPSHOT'

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

project.ext.lwjglVersion = "3.0.0"

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // http://mvnrepository.com/artifact/com.google.code.findbugs/findbugs
    compile group: 'com.google.code.findbugs', name: 'findbugs', version: '3.0.1'
    compile "org.lwjgl:lwjgl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-platform:${lwjglVersion}:natives-windows"
    compile "org.lwjgl:lwjgl-platform:${lwjglVersion}:natives-linux"
    compile "org.lwjgl:lwjgl-platform:${lwjglVersion}:natives-osx"

    compile group: 'org.l33tlabs.twl', name: 'pngdecoder', version: '1.0'
}

def platforms = ['windows', 'linux', 'osx']
platforms.each { platform ->
    task "${platform}Natives" {
        def outputDir = "$buildDir/natives/$platform"
        inputs.files(configurations.compile)
        outputs.dir(outputDir)
        doLast {
            copy {
                def artifacts = configurations.compile.resolvedConfiguration.resolvedArtifacts
                        .findAll { it.classifier == "natives-$platform" }
                artifacts.each {
                    from zipTree(it.file)
                }
                into outputDir
            }
        }
    }
}
task natives {
    description "Copies native libraries to an appropriate directory."
    dependsOn platforms.collect { "${it}Natives" }.findAll { tasks[it] }
}
